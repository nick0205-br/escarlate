{"ast":null,"code":"import { API_URL } from './config.js';\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: API_URL\n});\nexport async function cadastrarUsuario(nome, email, senha) {\n  const r = await api.post('/usuario', {\n    nome,\n    email,\n    senha\n  });\n  return r.data;\n}\nexport async function loginUsuario(email, senha) {\n  const r = await api.post('/usuario/login', {\n    email,\n    senha\n  });\n  return r.data;\n}\nexport async function verPerfil(id) {\n  const resposta = await api.get(`/usuario/${id}`);\n  return resposta.data;\n}\nexport async function enviarImagemUsuario(id, imagem) {\n  const formData = new FormData();\n  formData.append('imagem', imagem);\n  const resposta = await api.put(`/usuario/${id}/imagem`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n  return resposta.status;\n}\nexport async function salvarEndereco(idUsuario, nomeRemetente, estado, cidade, bairro, blocoapt, logradouro, complemento, numeroEndereco, numeroCep) {\n  const r = await api.post('/usuario/' + idUsuario + '/endereco', {\n    idUsuario,\n    nomeRemetente,\n    estado,\n    cidade,\n    bairro,\n    blocoapt,\n    logradouro,\n    complemento,\n    numeroEndereco,\n    numeroCep\n  });\n  return r.data;\n}\nexport async function listarEnderecos(idUsuario) {\n  const r = await api.get('/usuario/' + idUsuario + '/endereco');\n  return r.data;\n}\nexport async function removerEndereco(id) {\n  const resposta = await api.delete(`/endereco/${id}`);\n  return resposta.status;\n}\nexport async function salvarNovoPedido(idUsuario, novoPedido) {\n  const r = await api.post('/pedido/' + idUsuario, novoPedido);\n  return r.data;\n}\nexport async function listarArtistasHome() {\n  const r = await api.get('/artistas');\n  return r.data;\n}\nexport async function AltSenha(id, senha, senhaNova) {\n  const r = await api.put('/alterarsenha/' + id, {\n    senha,\n    senhaNova\n  });\n  return r.data;\n}\n_c = AltSenha;\nexport async function AlterarUsu(id, nome, email, cpf, telefone) {\n  const resp = await api.put(`/alterarperfil/${id}`, {\n    nome,\n    email,\n    cpf,\n    telefone\n  });\n  return resp.data;\n}\n_c2 = AlterarUsu;\nexport function buscarImagem(imagem) {\n  return `${api.getUri()}/${imagem}`;\n}\nexport async function listarCartoes(id) {\n  const r = await api.get(`/usuario/cartao/${id}`);\n  return r.data;\n}\nexport async function ListarPedidosUsuario(id) {\n  const resp = await api.get('/usuario/pedido/' + id);\n  return resp.data;\n}\n_c3 = ListarPedidosUsuario;\nexport async function listarCartoesPorId(id) {\n  const r = await api.get(`/cartao/${id}`);\n  return r.data;\n}\nexport async function EditarCartaoUser(id, nomeCartao, numero, cvv, vencimento) {\n  const r = await api.put(`/usuario/cartao/${id}`, {\n    nomeCartao,\n    numero,\n    cvv,\n    vencimento\n  });\n  return r.data;\n}\n_c4 = EditarCartaoUser;\nexport async function removerCartao(id) {\n  const resposta = await api.delete(`/usuario/cartao/${id}`);\n  return resposta.status;\n}\nexport async function ArtistaProduto(id) {\n  const r = await api.get(`/artista/${id}/produto`);\n  return r.data;\n}\n_c5 = ArtistaProduto;\nexport async function cancelarPedido(id) {\n  const r = api.put(`/cancelarCompra/${id}`);\n  return r.status;\n}\nexport async function enviarEmail(email, produto) {\n  const resp = await api.post(`/enviar-email`, {\n    email: email,\n    produto: produto\n  });\n  return resp.data;\n}\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"AltSenha\");\n$RefreshReg$(_c2, \"AlterarUsu\");\n$RefreshReg$(_c3, \"ListarPedidosUsuario\");\n$RefreshReg$(_c4, \"EditarCartaoUser\");\n$RefreshReg$(_c5, \"ArtistaProduto\");","map":{"version":3,"names":["API_URL","axios","api","create","baseURL","cadastrarUsuario","nome","email","senha","r","post","data","loginUsuario","verPerfil","id","resposta","get","enviarImagemUsuario","imagem","formData","FormData","append","put","headers","status","salvarEndereco","idUsuario","nomeRemetente","estado","cidade","bairro","blocoapt","logradouro","complemento","numeroEndereco","numeroCep","listarEnderecos","removerEndereco","delete","salvarNovoPedido","novoPedido","listarArtistasHome","AltSenha","senhaNova","AlterarUsu","cpf","telefone","resp","buscarImagem","getUri","listarCartoes","ListarPedidosUsuario","listarCartoesPorId","EditarCartaoUser","nomeCartao","numero","cvv","vencimento","removerCartao","ArtistaProduto","cancelarPedido","enviarEmail","produto"],"sources":["C:/Users/Lopes Corp one/Documents/c√≥digos n/Escarlate-TCC/site/src/api/usuarioAPI.js"],"sourcesContent":["import { API_URL } from './config.js'\n\nimport axios from 'axios';\nconst api = axios.create({\n    baseURL: API_URL\n});\n\n\nexport async function cadastrarUsuario(nome,email,senha) {\n\tconst r = await api.post('/usuario', \n    {\n        nome,\n        email,\n        senha\n    });\n\treturn r.data;\n}\n\nexport async function loginUsuario(email,senha){\n    const r = await api.post('/usuario/login' , {\n        email,\n        senha\n    })\n    return r.data;\n}\n\nexport async function verPerfil(id) {\n    const resposta = await api.get(`/usuario/${id}`);\n    return resposta.data; \n}\n\nexport async function enviarImagemUsuario(id, imagem){\n    const formData = new FormData();\n    formData.append('imagem', imagem);\n\n    const resposta = await api.put(`/usuario/${id}/imagem`, formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        },\n    });\n    return resposta.status;\n}\n\nexport async function salvarEndereco(idUsuario,nomeRemetente, estado, cidade, bairro, blocoapt, logradouro,complemento,numeroEndereco,numeroCep){\n    const r = await api.post('/usuario/' + idUsuario +'/endereco',\n     {idUsuario,\n     nomeRemetente, \n     estado, \n     cidade, \n     bairro, \n     blocoapt, \n     logradouro,\n     complemento,\n     numeroEndereco,\n     numeroCep})\n     \n     return r.data;\n}\n\nexport async function listarEnderecos(idUsuario){\n    const r = await api.get('/usuario/' + idUsuario + '/endereco');\n    return r.data\n}\n\nexport async function removerEndereco(id) {\n\tconst resposta = await api.delete(`/endereco/${id}`);\n\treturn resposta.status;\n}\n\nexport async function salvarNovoPedido(idUsuario, novoPedido){\n    const r = await api.post('/pedido/' + idUsuario, novoPedido);\n    return r.data;\n}\n\nexport async function listarArtistasHome(){\n    const r = await api.get('/artistas');\n    return r.data;\n}\n\nexport async function AltSenha(id, senha, senhaNova){\n    const r = await api.put('/alterarsenha/' + id, {\n        senha,\n        senhaNova\n    })\n    return r.data;\n}\n\nexport async function AlterarUsu( id, nome, email, cpf, telefone){\n    const resp = await api.put (`/alterarperfil/${id}`, {\n        nome,\n        email, \n        cpf, \n        telefone\n    })\n    return resp.data\n}\n\nexport function buscarImagem(imagem) {\n    return `${api.getUri()}/${imagem}`;\n}      \n\n\nexport async function listarCartoes(id){\n    const r = await api.get(`/usuario/cartao/${id}`);\n    return r.data\n}\n\nexport async function ListarPedidosUsuario(id){\n    const resp = await api.get('/usuario/pedido/' + id);\n    return resp.data\n}\n\nexport async function listarCartoesPorId(id){\n    const r = await api.get(`/cartao/${id}`);\n    return r.data\n}\n\nexport async function EditarCartaoUser(id, nomeCartao,numero,cvv,vencimento){\n    const r = await api.put (`/usuario/cartao/${id}`, {\n        nomeCartao, numero, cvv, vencimento\n    });\n    return r.data;\n}\n\nexport async function removerCartao(id) {\n\tconst resposta = await api.delete(`/usuario/cartao/${id}`);\n\treturn resposta.status;\n}\n\nexport async function ArtistaProduto(id){\n    const r = await api.get(`/artista/${id}/produto`);\n    return r.data\n}\n\nexport async function cancelarPedido(id){\n    const r = api.put(`/cancelarCompra/${id}`)\n    return r.status;\n}\n\nexport async function enviarEmail(email, produto){\n    const resp = await api.post (`/enviar-email`, {\n        email:email, \n        produto:produto\n    })\n    return resp.data\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EACrBC,OAAO,EAAEJ;AADY,CAAb,CAAZ;AAKA,OAAO,eAAeK,gBAAf,CAAgCC,IAAhC,EAAqCC,KAArC,EAA2CC,KAA3C,EAAkD;EACxD,MAAMC,CAAC,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,UAAT,EACb;IACIJ,IADJ;IAEIC,KAFJ;IAGIC;EAHJ,CADa,CAAhB;EAMA,OAAOC,CAAC,CAACE,IAAT;AACA;AAED,OAAO,eAAeC,YAAf,CAA4BL,KAA5B,EAAkCC,KAAlC,EAAwC;EAC3C,MAAMC,CAAC,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,gBAAT,EAA4B;IACxCH,KADwC;IAExCC;EAFwC,CAA5B,CAAhB;EAIA,OAAOC,CAAC,CAACE,IAAT;AACH;AAED,OAAO,eAAeE,SAAf,CAAyBC,EAAzB,EAA6B;EAChC,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAJ,CAAS,YAAWF,EAAG,EAAvB,CAAvB;EACA,OAAOC,QAAQ,CAACJ,IAAhB;AACH;AAED,OAAO,eAAeM,mBAAf,CAAmCH,EAAnC,EAAuCI,MAAvC,EAA8C;EACjD,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,MAA1B;EAEA,MAAMH,QAAQ,GAAG,MAAMb,GAAG,CAACoB,GAAJ,CAAS,YAAWR,EAAG,SAAvB,EAAiCK,QAAjC,EAA2C;IAC9DI,OAAO,EAAE;MACL,gBAAgB;IADX;EADqD,CAA3C,CAAvB;EAKA,OAAOR,QAAQ,CAACS,MAAhB;AACH;AAED,OAAO,eAAeC,cAAf,CAA8BC,SAA9B,EAAwCC,aAAxC,EAAuDC,MAAvD,EAA+DC,MAA/D,EAAuEC,MAAvE,EAA+EC,QAA/E,EAAyFC,UAAzF,EAAoGC,WAApG,EAAgHC,cAAhH,EAA+HC,SAA/H,EAAyI;EAC5I,MAAM1B,CAAC,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,cAAcgB,SAAd,GAAyB,WAAlC,EACf;IAACA,SAAD;IACAC,aADA;IAEAC,MAFA;IAGAC,MAHA;IAIAC,MAJA;IAKAC,QALA;IAMAC,UANA;IAOAC,WAPA;IAQAC,cARA;IASAC;EATA,CADe,CAAhB;EAYC,OAAO1B,CAAC,CAACE,IAAT;AACJ;AAED,OAAO,eAAeyB,eAAf,CAA+BV,SAA/B,EAAyC;EAC5C,MAAMjB,CAAC,GAAG,MAAMP,GAAG,CAACc,GAAJ,CAAQ,cAAcU,SAAd,GAA0B,WAAlC,CAAhB;EACA,OAAOjB,CAAC,CAACE,IAAT;AACH;AAED,OAAO,eAAe0B,eAAf,CAA+BvB,EAA/B,EAAmC;EACzC,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACoC,MAAJ,CAAY,aAAYxB,EAAG,EAA3B,CAAvB;EACA,OAAOC,QAAQ,CAACS,MAAhB;AACA;AAED,OAAO,eAAee,gBAAf,CAAgCb,SAAhC,EAA2Cc,UAA3C,EAAsD;EACzD,MAAM/B,CAAC,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,aAAagB,SAAtB,EAAiCc,UAAjC,CAAhB;EACA,OAAO/B,CAAC,CAACE,IAAT;AACH;AAED,OAAO,eAAe8B,kBAAf,GAAmC;EACtC,MAAMhC,CAAC,GAAG,MAAMP,GAAG,CAACc,GAAJ,CAAQ,WAAR,CAAhB;EACA,OAAOP,CAAC,CAACE,IAAT;AACH;AAED,OAAO,eAAe+B,QAAf,CAAwB5B,EAAxB,EAA4BN,KAA5B,EAAmCmC,SAAnC,EAA6C;EAChD,MAAMlC,CAAC,GAAG,MAAMP,GAAG,CAACoB,GAAJ,CAAQ,mBAAmBR,EAA3B,EAA+B;IAC3CN,KAD2C;IAE3CmC;EAF2C,CAA/B,CAAhB;EAIA,OAAOlC,CAAC,CAACE,IAAT;AACH;KANqB+B,Q;AAQtB,OAAO,eAAeE,UAAf,CAA2B9B,EAA3B,EAA+BR,IAA/B,EAAqCC,KAArC,EAA4CsC,GAA5C,EAAiDC,QAAjD,EAA0D;EAC7D,MAAMC,IAAI,GAAG,MAAM7C,GAAG,CAACoB,GAAJ,CAAU,kBAAiBR,EAAG,EAA9B,EAAiC;IAChDR,IADgD;IAEhDC,KAFgD;IAGhDsC,GAHgD;IAIhDC;EAJgD,CAAjC,CAAnB;EAMA,OAAOC,IAAI,CAACpC,IAAZ;AACH;MARqBiC,U;AAUtB,OAAO,SAASI,YAAT,CAAsB9B,MAAtB,EAA8B;EACjC,OAAQ,GAAEhB,GAAG,CAAC+C,MAAJ,EAAa,IAAG/B,MAAO,EAAjC;AACH;AAGD,OAAO,eAAegC,aAAf,CAA6BpC,EAA7B,EAAgC;EACnC,MAAML,CAAC,GAAG,MAAMP,GAAG,CAACc,GAAJ,CAAS,mBAAkBF,EAAG,EAA9B,CAAhB;EACA,OAAOL,CAAC,CAACE,IAAT;AACH;AAED,OAAO,eAAewC,oBAAf,CAAoCrC,EAApC,EAAuC;EAC1C,MAAMiC,IAAI,GAAG,MAAM7C,GAAG,CAACc,GAAJ,CAAQ,qBAAqBF,EAA7B,CAAnB;EACA,OAAOiC,IAAI,CAACpC,IAAZ;AACH;MAHqBwC,oB;AAKtB,OAAO,eAAeC,kBAAf,CAAkCtC,EAAlC,EAAqC;EACxC,MAAML,CAAC,GAAG,MAAMP,GAAG,CAACc,GAAJ,CAAS,WAAUF,EAAG,EAAtB,CAAhB;EACA,OAAOL,CAAC,CAACE,IAAT;AACH;AAED,OAAO,eAAe0C,gBAAf,CAAgCvC,EAAhC,EAAoCwC,UAApC,EAA+CC,MAA/C,EAAsDC,GAAtD,EAA0DC,UAA1D,EAAqE;EACxE,MAAMhD,CAAC,GAAG,MAAMP,GAAG,CAACoB,GAAJ,CAAU,mBAAkBR,EAAG,EAA/B,EAAkC;IAC9CwC,UAD8C;IAClCC,MADkC;IAC1BC,GAD0B;IACrBC;EADqB,CAAlC,CAAhB;EAGA,OAAOhD,CAAC,CAACE,IAAT;AACH;MALqB0C,gB;AAOtB,OAAO,eAAeK,aAAf,CAA6B5C,EAA7B,EAAiC;EACvC,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACoC,MAAJ,CAAY,mBAAkBxB,EAAG,EAAjC,CAAvB;EACA,OAAOC,QAAQ,CAACS,MAAhB;AACA;AAED,OAAO,eAAemC,cAAf,CAA8B7C,EAA9B,EAAiC;EACpC,MAAML,CAAC,GAAG,MAAMP,GAAG,CAACc,GAAJ,CAAS,YAAWF,EAAG,UAAvB,CAAhB;EACA,OAAOL,CAAC,CAACE,IAAT;AACH;MAHqBgD,c;AAKtB,OAAO,eAAeC,cAAf,CAA8B9C,EAA9B,EAAiC;EACpC,MAAML,CAAC,GAAGP,GAAG,CAACoB,GAAJ,CAAS,mBAAkBR,EAAG,EAA9B,CAAV;EACA,OAAOL,CAAC,CAACe,MAAT;AACH;AAED,OAAO,eAAeqC,WAAf,CAA2BtD,KAA3B,EAAkCuD,OAAlC,EAA0C;EAC7C,MAAMf,IAAI,GAAG,MAAM7C,GAAG,CAACQ,IAAJ,CAAW,eAAX,EAA2B;IAC1CH,KAAK,EAACA,KADoC;IAE1CuD,OAAO,EAACA;EAFkC,CAA3B,CAAnB;EAIA,OAAOf,IAAI,CAACpC,IAAZ;AACH"},"metadata":{},"sourceType":"module"}